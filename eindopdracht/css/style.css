/* Disable most default styling */
*, *::before, *::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  list-style: none;
}

:nth-child(1) { --nth-child: 1 }
:nth-child(2) { --nth-child: 2 }
:nth-child(3) { --nth-child: 3 }
:nth-child(4) { --nth-child: 4 }
:nth-child(5) { --nth-child: 5 }
:nth-child(6) { --nth-child: 6 }
:nth-child(7) { --nth-child: 7 }
:nth-child(8) { --nth-child: 8 }
:nth-child(9) { --nth-child: 9 }
:nth-child(10) { --nth-child: 10 }

p {
  font-family: sans-serif;
}

/* Main header */

body > header {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 4em;
  background-color: rgb(0, 255, 213);
  color: white;
  font-weight: bold;
}

body > header h1 {
  width: 350px;
  height: 70px;
  font-size: 2rem;
  background-color: black;
  position: relative;
  transition: .5s;
  transform-style:preserve-3d;
  margin-bottom: 1rem;
}
body > header h1:hover {
  transform: rotateY(180deg);
}

body > header h1 span {
  display: inline;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

body > header h1 span:first-child {
  backface-visibility: hidden;
}

body > header h1 span:last-child {
  position: absolute;
  transform: translate(-50%, -50%) rotateY(180deg);
  transform-origin: center center;
  backface-visibility: hidden;
}

/* Main header */

main {
  position: relative;
  display: flex;
  height: 100vh;
  flex-basis: auto;
}

/* Folding menu */

main > section {
  width: 100%;
  height: 200px;
}

main > section header {
  width: 100%;
  height: 100%;
  background-color: rgb(0, 217, 255);
  color: rgb(16, 105, 165);
  transform-style: preserve-3d;
  cursor: pointer;
  padding: 2rem;
}

header h2 {
  margin-bottom: 1rem;
}

main > section header:hover {
  background-color: rgb(82, 229, 255);
}

main > section article {
  width: 50%;
  height: 200px;
  background-color: rgb(0, 217, 255);
  backface-visibility: hidden;
  transform: rotateY(180deg);
  transition: .5s;
  padding: 2rem;
  position: absolute;
  top: calc((var(--nth-child) / 2) * 200px);
  opacity: 0;
  z-index: 10;
  left: 0;
}

main > section article:nth-child(2n + 1) {
  left: 50%;
  top: calc((var(--nth-child) / 2) * 200px - 100px);
}

input[type=radio] {
  position: absolute;
  opacity: 0;
  top: 0;
}

main > input:checked + section label ~ article {
  opacity: 1;
  background-color: rgb(228, 251, 255);
  backface-visibility: hidden;
  transform: rotateY(0);
  transition-delay: calc((var(--nth-child)) * .1s);
}

/* https://stackoverflow.com/questions/28110057/using-css-nth-child-to-select-irregular-pattern-in-sequence */
main > input:checked + section label ~ article:nth-child(4n + 1),
main > input:checked + section label ~ article:nth-child(4n + 2) {
  background-color: white;
}

main > input:checked + section label header {
  background-color: rgb(0, 195, 230);
}

/* Folding menu */

/*
*
*   Parallax scrolling in CSS: https://www.digitalocean.com/community/tutorials/css-pure-css-parallax
*
*   Interesting read about non-rectangular layouts: https://www.sarasoueidan.com/blog/css-shapes/
*
*   More about layouts that include shapes: https://www.smashingmagazine.com/2019/04/art-direction-for-the-web-using-css-shapes/
* 
*   How to make shapes in CSS: https://itnext.io/how-to-create-beautiful-shapes-in-css-a-teardown-of-3-shapes-purely-made-in-css-c3ac7cb99c4
*
*   Connecting blobs by Sanne: https://www.sinds1971.nl/cssvoordedames/9-mixen.html
*
*   Take a look at: Vmin Vmax
*
*   Parallax Sanne: https://codepen.io/shooft/pen/BaLYpQQ -- https://codepen.io/shooft/pen/RwGQKKP -- https://www.sinds1971.nl/fed/parallax/index.html (advanced)
*
*/